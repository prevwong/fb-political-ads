{"version":3,"sources":["components/Visibility.js","components/Container.js","components/Graph.js","components/Legends.js","visualisations/hottest-topics.js","utils/index.js","visualisations/sentiment.js","utils/constants.js","visualisations/bubbles.js","visualisations/clustering.js","App.js","serviceWorker.js","index.js"],"names":["Visibility","children","nodeRef","useRef","isVisible","useIsVisible","useState","wasVisible","setWasVisible","useEffect","ref","className","Container","preface","title","subtitle","Row","gutter","Col","span","style","paddingLeft","paddingRight","paddingBottom","Graph","visualisation","React","createElement","Legends","data","onChange","current","setCurrent","map","i","color","name","key","onClick","value","background","HottestTopics","svgRef","svgD3","colorRef","legends","setLegends","selected","setSelected","selectedRef","init","useCallback","a","div","d3","append","attr","svg","projection","translate","width","height","scale","path","highlightRegion","d","selectable","selectAll","d1","properties","transition","duration","html","pageX","pageY","unhighlightRegion","_","json","features","length","jsonState","categoriesInLocation","categoriesInLocationWithSumImpressions","Object","entries","entities","mergedEntities","reduce","accum","impressions","replace","trim","parseInt","sortedMergedEntities","sort","b","totalImpressions","sum","e","split","sortedCategoriesInLocationWithSumImpressions","value1","top1","category","categories","Array","from","Set","filter","f","domain","range","enter","on","preserveAspectRatio","viewBox","position","each","this","fill","overflow","marginBottom","borderSpacing","marginTop","align","entity","fontSize","type","textAlign","borderRadius","capitalise","str","toUpperCase","slice","Sentiment","dialog","setDialog","margin","top","right","bottom","left","g","y","rangeRound","paddingInner","x","keys","csv","message","relevant","msg","conclusion","push","console","log","nice","series","o","index","bandwidth","obj","call","padding","visible","onCancel","Body","activeName","table","columns","label","prop","item","text","Pane","toLowerCase","ENTITIES","TARGETS","ADVERTISER","PAID_FOR_BY","Bubbles","forceSimulation","bubbles","overviewType","constants","selectedView","selectView","viewData","selectData","sidebarData","setSidebarData","nested","toggleNested","setData","loading","setLoading","handleMouseOver","attrs","r","radius","freq","handleMouseOut","handleMouseClick","selector","result","forEach","entitiesObj","JSON","parse","prepareInnerData","dragged","fx","fy","dragStarted","alphaTarget","restart","dragEnded","ticked","charge","Math","pow","loaded","draw","allFrequencies","values","minFrequency","min","maxFrequency","max","radiusScale","colorScale","interpolator","heightScale","nodes","random","darker","node","velocityDecay","force","strength","finalResult","splice","prepareOuterData","selectedData","targetsObj","target","offset","placeholder","Option","Clustering","cluster","setCluster","activeClass","setActiveClass","activeLabel","setActiveLabel","reload","toggleReload","Colors","points","styles","generatePolygonPoints","numPoints","angle","PI","sin","cos","animate","circle","Promise","resolve","reject","names","aqua","beige","blue","brown","cyan","darkblue","darkcyan","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkviolet","fuchsia","gold","green","indigo","khaki","lightblue","lightcyan","lightgreen","lightgrey","lightpink","lightyellow","lime","magenta","maroon","navy","olive","orange","pink","purple","violet","red","silver","yellow","count","frames","labels","id","polyPoints","colorList","labelling","rSize","distances","titles","messages","k","curLabel","floor","sqrt","maxEntityList","entityList","thisEntities","sortable","maxEntitiesMentioned","maxEntityInfo","entitiesFreq","includes","flat","Infinity","j","intersection","indexOf","R","centroid","info","opacity","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.35c696db.chunk.js","sourcesContent":["import React, {useRef, useEffect, useState} from \"react\";\nimport { useIsVisible } from 'react-is-visible'\n\nexport const Visibility = ({children}) => {\n  const nodeRef = useRef()\n  const isVisible = useIsVisible(nodeRef);\n  const [wasVisible, setWasVisible] = useState(false);\n\n  useEffect(() => {\n    if ( isVisible ) {\n      setWasVisible(true);\n    }\n  }, [isVisible]);\n\n  return (\n    <div ref={nodeRef} className={`visibility ${isVisible && 'visible'} ${wasVisible && 'wasVisible'}`}>\n      {children}\n    </div>\n  )\n}","import React from 'react'\nimport { Layout } from 'element-react'\nimport {Visibility} from \"./Visibility\";\n\nexport const Container = ({ preface, title, subtitle, children }) => {\n  return (\n    <Visibility>\n      <Layout.Row gutter='10'>\n        <Layout.Col span='24'>\n          <div\n            style={{\n              paddingLeft: '50px',\n              paddingRight: '50px',\n              paddingBottom: '40px'\n            }}\n          >\n            <h1>\n              {preface ? <small>{preface}</small> : null}\n              <br />\n              {title}\n              {subtitle ? (\n                <small className='hero-subtitle'>{subtitle}</small>\n              ) : null}\n            </h1>\n            {children}\n          </div>\n        </Layout.Col>\n      </Layout.Row>\n    </Visibility>\n  )\n}\n","import React from 'react'\nimport { Layout } from 'element-react'\nimport { Visibility } from './Visibility'\n\nexport const Graph = ({ visualisation }) => {\n  return (\n    <Visibility>\n      <Layout.Row gutter='10'>\n        <Layout.Col span='24'>\n          <div className='graph-container'>\n            {React.createElement(visualisation)}\n          </div>\n        </Layout.Col>\n      </Layout.Row>\n    </Visibility>\n  )\n}\n","import React, {useState} from \"react\";\n\nexport const Legends = ({data, onChange}) => {\n  const [current, setCurrent] = useState();\n\n  return (\n    <ul className=\"legends\">\n      {\n        data.map(({color, name}, i) => {\n          return (\n            <li key={i}>\n              <a\n                className={`${current == name ? 'current' : ''}`}\n                onClick={() => {\n                  let value;\n                  if ( current == name ) value = null\n                  else value = name;\n\n                  setCurrent(value);\n                  if ( onChange ) onChange(value);\n                  \n                }}\n              >\n                <span className=\"circle\" style={{background: color }}></span> \n                <p>{name}</p>\n                <i className=\"el-icon-close\"></i>\n              </a>\n            </li>\n          )\n        })\n      }\n    </ul>\n  )\n}","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport * as d3 from 'd3'\nimport { Layout, Tag } from 'element-react'\nimport { Legends } from '../components/Legends'\n\nexport const HottestTopics = () => {\n  const svgRef = useRef()\n  const svgD3 = useRef()\n  const colorRef = useRef()\n\n  const [legends, setLegends] = useState();\n  const [selected, setSelected] = useState();\n\n  const selectedRef = useRef();\n  const width = 960,\n    height = 500;\n\n  selectedRef.current = selected;\n\n \n\n  const init = useCallback(async () => {\n\n    var div = d3\n      .select('body')\n      .append('div')\n      .attr('class', 'tooltip')\n      .style('opacity', 0)\n\n    var svg = d3.select(svgRef.current)\n    svgD3.current = svg\n\n    var projection = d3\n      .geoAlbersUsa()\n      .translate([width / 2, height / 2]) // translate to center of screen\n      .scale([1000]) // scale things down so see entire US\n\n    // Define path generator\n    var path = d3\n      .geoPath() // path generator that will convert GeoJSON to SVG paths\n      .projection(projection) // tell path generator to use albersUsa projection\n\n\n    const highlightRegion = function(d) {\n      if ( !d.selectable ) return;\n      svg.selectAll(\"path\").style('opacity', function(d1) {\n        return d1.properties.name == d.properties.name ? 1 : 0.2;\n      })\n  \n      div\n        .transition()\n        .duration(200)\n        .style('opacity', 0.9)\n      div\n        .html(\n          `\n        <div>${d.properties.name}</div>\n        `\n        )\n        .style('left', d3.event.pageX + 'px')\n        .style('top', d3.event.pageY - 28 + 'px')\n    };\n    \n    const unhighlightRegion = function() {\n      svg.selectAll(\"path\").style('opacity', _  => 1)\n\n      div\n        .transition()\n        .duration(500)\n        .style('opacity', 0)\n    }\n\n    svg.unhighlightRegion = unhighlightRegion;\n\n    const data = await d3.json(\n      `datasets/state-entities-impressions-classified.json`\n    )\n    const json = await d3.json('datasets/us-states.json')\n\n    for (let i = 0; i < json.features.length; i++) {\n      var jsonState = json.features[i].properties.name\n\n      const categoriesInLocation = data[jsonState]\n      if (!categoriesInLocation) continue\n      const categoriesInLocationWithSumImpressions = Object.entries(\n        categoriesInLocation\n      ).map(([key, value]) => {\n        const { entities } = value\n        const mergedEntities = entities.reduce((accum, {name, impressions}) => {\n          name = name.replace(\"-\", \"\")\n          name = name.replace(\",\", \"\")\n          name = name.replace(\"`s\", \"\");\n          name = name.replace('\"', '')\n          name = name.trim();\n\n          accum[name] = accum[name] ? accum[name] + parseInt(impressions) : parseInt(impressions);\n          return accum;\n        }, {});\n\n        const sortedMergedEntities = Object.entries(mergedEntities).sort((a, b) => {\n          return ( a[1] > b[1]) ? -1 : 1;\n        });\n\n        const totalImpressions = entities.reduce(\n          (sum, e) => (sum += parseInt(e.impressions)),\n          0\n        )\n        const split = key.split('/')\n\n        return [\n          split[split.length - 1],\n          {\n            ...value,\n            entities: sortedMergedEntities,\n            // entities: sortedMergedEntities,\n            totalImpressions\n          }\n        ]\n      })\n\n      const sortedCategoriesInLocationWithSumImpressions = categoriesInLocationWithSumImpressions.sort(\n        ([key, value], [key1, value1]) => {\n          return value.totalImpressions > value1.totalImpressions ? -1 : 1\n        }\n      )\n\n      const top1 = sortedCategoriesInLocationWithSumImpressions[0]\n      json.features[i].properties.category = top1\n    }\n\n    const categories = Array.from(\n      new Set(\n        json.features\n          .filter(f => !!f.properties.category)\n          .map(f => f.properties.category && f.properties.category[0])\n      )\n    )\n\n    const color = d3\n      .scaleOrdinal()\n      .domain(categories)\n      .range(d3.schemeSet2)\n\n    colorRef.current = color\n\n    setLegends(categories.map(name => ({ name, color: color(name) })))\n\n    svg\n      .selectAll('path')\n      .data(json.features)\n      .enter()\n      .append('path')\n      .attr('d', path)\n      .style('stroke', '#fff')\n      .style('stroke-width', '1')\n      .style('cursor', 'pointer')\n      .style('transition', '0.1s ease-in')\n      .style('fill', function (d) {\n        d.selectable = true;\n        var value = d.properties.category && d.properties.category[0]\n        if (value) {\n          return color(value)\n        } else {\n          return '#fafafa'\n        }\n      })\n      .on('mousedown', function(d) {\n        if (selectedRef.current && d.properties.name == selectedRef.current.name ) {\n          setSelected(null);\n          unhighlightRegion();\n         } else {\n          setSelected(d.properties);\n          highlightRegion(d);\n         }\n      })\n      .on('mouseover', function (d) {\n        if ( !!selectedRef.current ) return;\n        highlightRegion(d);\n      })\n      .on('mouseout', function (d) {\n        if ( selectedRef.current ) return;\n        unhighlightRegion();\n      })\n  }, [])\n\n  useEffect(() => {\n    // if ( svg.current ) {\n    // console.log(svg.current)\n    init()\n    // }\n  }, [])\n\n  return (\n    <div>\n      <Layout.Row>\n        <Layout.Col span='17'>\n          <svg\n            preserveAspectRatio='xMinYMin meet'\n            viewBox={`0 0 ${width} ${height}`}\n            ref={svgRef}\n          ></svg>\n        </Layout.Col>\n        <Layout.Col span='7' style={{position: \"relative\"}}>\n          <div className='toolbar'>\n            <section>\n              <h3>Legends</h3>\n              {legends ? (\n                <Legends\n                  data={legends}\n                  onChange={value => {\n                    const svg = svgD3.current\n\n                    svg.selectAll('svg path').each(function (d) {\n                      const category =\n                        d.properties.category && d.properties.category[0]\n                      if (value && category != value) {\n                        this.style.fill = '#eee';\n                        d.selectable=false;\n                      } else {\n                        d.selectable=true;\n                        this.style.fill = colorRef.current(category);\n                      }\n                    })\n                  }}\n                />\n              ) : null}\n            </section>\n          </div>\n          {\n            selected ? (\n              <div className=\"toolbar overlay\" style={{overflow: \"auto\"}}>\n                <section style={{overflow: \"hidden\"}}>\n                  <h2 style={{marginBottom: 0}}>\n                    {selected.name}\n                    <i \n                      className=\"el-icon-close close\"\n                      onClick={() => {\n                        setSelected(null);\n                        const svg = svgD3.current\n                        svg.unhighlightRegion();\n                      }}\n                    ></i>\n                  </h2>\n                  <h3><span className=\"circle\" style={{background: colorRef.current(selected.category[0]) }}></span> {selected.category[0]}</h3>\n                  <table style={{overflow: \"scroll\", borderSpacing: \"0px 7px\", marginTop: \"10px\"}}>\n                    <thead>\n                      <tr>\n                        <th align=\"left\" width=\"300\">Entity</th>\n                        <th align=\"right\">Imp.</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {\n                        selected.category[1].entities.map((entity, i) => {\n                          return (\n                            <tr key={i}>\n                              <td style={{fontSize: \"12px\"}}>{entity[0]}</td>\n                              <td style={{fontSize: \"12px\"}}><Tag type=\"primary\" style={{textAlign:\"center\", width:\"100%\", borderRadius: \"100px\"}}>{entity[1]}</Tag></td>\n                            </tr>\n                          )\n                        })\n                      }\n                    </tbody>\n                  </table>\n                </section>\n              </div>\n            ) : null\n          }\n        </Layout.Col>\n      </Layout.Row>\n    </div>\n  )\n}\n","export const capitalise = (str) => str[0].toUpperCase() + str.slice(1, str.length);","import React, { useRef, useState, useCallback, useEffect } from 'react'\nimport { Layout, Dialog, Tabs, Table, Tag } from 'element-react'\nimport * as d3 from 'd3'\nimport { Legends } from '../components/Legends'\nimport { capitalise } from '../utils'\n\n\n// console.log(fc.chartCartesian)\nexport const Sentiment = () => {\n  const svgRef = useRef()\n  const svgD3 = useRef();\n  const colorRef = useRef()\n  const [dialog, setDialog] = useState();\n  const [legends, setLegends] = useState();\n  const [selected, setSelected] = useState();\n  \n  const selectedRef = useRef();\n  selectedRef.current = selected;\n\n  let w = 900,\n    h = 400\n\n  const init = useCallback(async () => {\n    var svg = d3.select(svgRef.current)\n    svgD3.current = svg\n\n    const margin = { top: 20, right: 20, bottom: 30, left: 100 }\n    const width = w - margin.left - margin.right\n    const height = h - margin.top - margin.bottom\n    const g = svg\n      .append('g')\n      .attr('transform', `translate(${margin.left}, ${margin.top})`)\n\n    var y = d3\n      .scaleBand() // x = d3.scaleBand()\n      .rangeRound([0, height]) // .rangeRound([0, width])\n      .paddingInner(0.05)\n      .align(0.1)\n\n    var x = d3\n      .scaleLinear() // y = d3.scaleLinear()\n      .rangeRound([0, width]) // .rangeRound([height, 0]);\n\n    \n    const highlightRegion = function(d) {\n      if ( !d.selectable ) return;\n\n      svg.selectAll(\"rect\").style('opacity', function(d1) {\n        return d1 == d ? 1: 0.2;\n      })\n\n  \n      div\n        .transition()\n        .duration(200)\n        .style('opacity', 0.9)\n      div\n        .html(\n          `\n          <div>${capitalise(d.key)}: ${d[1] - d[0]}</div>\n        `\n        )\n        .style('left', d3.event.pageX + 'px')\n        .style('top', d3.event.pageY - 28 + 'px')\n    };\n    \n    const unhighlightRegion = function() {\n      svg.selectAll(\"rect\").style('opacity', _  => 1)\n\n      div\n        .transition()\n        .duration(500)\n        .style('opacity', 0)\n    }\n\n    svg.unhighlightRegion = unhighlightRegion;\n\n\n    const json = await d3.json('datasets/categorisedSentimentFinal.json')\n    const keys = ['entity', 'neutral', 'mixed', 'positive', 'negative']\n\n    \n\n    const csv = Object.keys(json).reduce((accum, key) => {\n      const message = json[key]\n      const data = {\n        entity: key,\n        ...keys.slice(1).reduce((accum, key) => {\n          const relevant = message.filter(msg => msg.conclusion == key)\n          accum[key] = relevant.length\n          return accum\n        }, {})\n      }\n\n      accum.push(data)\n      return accum\n    }, [])\n\n    console.log(csv);\n    y.domain(\n      csv.map(function (d) {\n        return d.entity\n      })\n    )\n\n    x.domain([0, 100]).nice()\n\n    const series = d3.stack().keys(keys.slice(1))(csv);\n\n    var color = d3\n      .scaleOrdinal()\n      .range(['#62bedc', '#6b8ae4', '#1fa888', '#fec958']);\n\n    setLegends(keys.slice(1).map(name => ({ name: capitalise(name), color: color(name) })))\n    colorRef.current = color;\n\n    var div = d3\n      .select('body')\n      .append('div')\n      .attr('class', 'tooltip')\n      .style('opacity', 0)\n\n    g.append('g')\n      .selectAll('g')\n      .data(series)\n      .enter()\n      .append('g')\n      .attr('fill', function (d) {\n        return color(d.key)\n      })\n      .selectAll('rect')\n      .data(function (d) {\n        d.map((i, o) => {\n          i.key = d.key;\n          i.index = o;\n          return i;\n        });\n        return d\n      })\n      .enter()\n      .append('rect')\n      .style('transition', '0.1s ease-in')\n      .attr('y', function (d) {\n        d.selectable = true;\n        return y(d.data.entity)\n      })\n      .attr('x', function (d, i) {\n        return x(d[0])\n      }) \n      .attr('width', function (d) {\n        return x(d[1]) - x(d[0])\n      })\n      .attr('height', y.bandwidth())\n      .style(\"cursor\", \"pointer\")\n      .on('mouseover', function (d) {\n        highlightRegion(d);\n      })\n      .on('mouseout', function (d) {\n        unhighlightRegion();\n      })\n      .on('mousedown', d => {\n        const obj = {\n          selected: d,\n          data: json[d.data.entity],\n          keys: keys.slice(1),\n        };\n\n        setDialog(obj)\n      })\n\n    g.append('g')\n      .attr('class', 'axis')\n      .attr('transform', 'translate(0,0)')\n      .call(d3.axisLeft(y))\n\n    g.append('g')\n      .attr('class', 'axis')\n      .attr('transform', `translate(0, ${height})`)\n      .call(d3.axisBottom(x));\n  }, [])\n\n  useEffect(() => {\n    init()\n  }, [])\n\n  return (\n    <div style={{padding: \"20px 0\"}}>\n       <Dialog\n        title={dialog && dialog.selected.data.entity}\n        visible={!!dialog}\n        onCancel={ () => setDialog(null) }\n      >\n        <Dialog.Body>\n          {\n            dialog ? (\n              <Tabs activeName={dialog.selected.key} value={dialog.selected.key}>\n                {\n                  dialog.keys.map(key => {\n                    const table = {\n                      columns: [\n                        {\n                          label: \"Message\",\n                          prop: \"message\",\n                        },\n                        {\n                          label: \"Impressions\",\n                          prop: \"impressions\",\n                          width: 120\n                        }\n                      ],\n                      data: dialog.data.filter(item => item.conclusion == key).reduce((accum, item) => {\n                          accum.push({\n                            message: item.text,\n                            impressions: item.impressions\n                          })\n                          return accum;\n                        }, [])\n                      \n                    }\n                    return (\n                      <Tabs.Pane \n                       label={<>{capitalise(key)} <Tag style={{background: colorRef.current(key)}}>{dialog.selected.data[key]}</Tag></>}\n                       name={key} key={key}>\n                        <Table\n                         height={250}\n                          style={{width: '100%'}}\n                          columns={table.columns}\n                          data={table.data}\n                        />\n                      </Tabs.Pane>\n                    )\n                  })\n                }\n              </Tabs>\n            ) : null\n          }\n        </Dialog.Body>\n      </Dialog>\n      <Layout.Row>\n        <Layout.Col span='20'>\n          <svg\n            ref={svgRef}\n            preserveAspectRatio='xMinYMin meet'\n            viewBox={`0 0 ${w} ${h}`}\n          ></svg>\n        </Layout.Col>\n        <Layout.Col span=\"4\">\n          <div className=\"toolbar\">\n            <section>\n              <h3>Legends</h3>\n              {legends ? (\n                <Legends\n                  data={legends}\n                  onChange={(value) => {\n                    value = value ? value.toLowerCase() : value;\n                    const svg = svgD3.current\n\n                    svg.selectAll('rect').each(function (d) {\n                      const category = d.key;\n                      if ( value && category != value) {\n                        this.style.fill = '#eee';\n                        d.selectable = false;\n                      }\n                      else {\n                        this.style.fill = colorRef.current(category);\n                        d.selectable = true;\n                      }\n                    })\n                  }}\n                />\n              ) : null}\n            </section>\n          </div>\n        </Layout.Col>\n      </Layout.Row>\n    </div>\n  )\n}\n","export default {\n    overviewType: {\n        ENTITIES: 'entities',\n        TARGETS: 'targets',\n        ADVERTISER: 'advertiser',\n        PAID_FOR_BY: 'paid_for_by',\n    }\n}","\nimport React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { Layout, Select, Button, Loading } from 'element-react'\nimport * as d3 from 'd3'\nimport \"d3-selection-multi\";\nimport constants from '../utils/constants'\n\nexport const Bubbles = () => {\n    const width = 960, height = 500;\n    const maxBubbles = 150;\n    const svgRef = useRef();\n    const minBubbleSize = 5\n    const maxBubbleSize = 80\n    const velocityDecay = 0.15;\n    const forceStrength = 0.03;\n    const { overviewType } = constants;\n    const [selectedView, selectView] = useState();\n    const [viewData, selectData] = useState({});\n    const [sidebarData, setSidebarData] = useState('Select a node to view');\n    const [nested, toggleNested] = useState(false);\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    let forceSimulation, bubbles, text;\n\n\n    function handleMouseOver(d, i) {\n\n        d3.select(this).attrs({\n            r: d.radius * 1.5\n        });\n\n        setSidebarData(`${d.data}: ${d.freq}`)\n        const svg = d3.select(svgRef.current)\n        svg.selectAll(\"circle\").style('opacity', function (d1) {\n            return d1.data == d.data ? 1 : 0.2;\n        })\n        svg.selectAll(\"text\").style('opacity', function (d1) {\n            return d1.data == d.data ? 1 : 0.2;\n        })\n\n    }\n\n    function handleMouseOut(d, i) {\n        d3.select(this).attrs({\n            r: d.radius,\n        });\n        const svg = d3.select(svgRef.current)\n        svg.selectAll(\"circle\").style('opacity', 1)\n        svg.selectAll(\"text\").style('opacity', 1)\n\n    }\n\n    function handleMouseClick(d) {\n        if (nested) return\n        const result = {}\n        let category, selector;\n        if (selectedView === overviewType.ENTITIES || selectedView === overviewType.TARGETS) {\n            if (selectedView === overviewType.ENTITIES) {\n                category = 'entity_type'\n                selector = 'entity'\n            } else if (selectedView === overviewType.TARGETS) {\n                category = 'target'\n                selector = 'segment'\n\n            }\n            data[selectedView].forEach(entitiesObj => {\n                const entitiesList = JSON.parse(entitiesObj)\n                entitiesList.forEach(entity => {\n                    if (entity[category] !== d.data) return\n\n                    if (result[entity[selector]]) {\n                        result[entity[selector]] += 1\n                    } else {\n                        result[entity[selector]] = 1\n                    }\n                })\n            })\n            toggleNested(true)\n            prepareInnerData(result)\n\n        }\n\n    }\n\n    function dragged(d) {\n        /* bubbles.attr(\"cx\", d.x = d3.event.x).attr(\"cy\", d.y = d3.event.y); */\n        d.fx = d3.event.x\n        d.fy = d3.event.y\n    }\n\n    function dragStarted(d) {\n        forceSimulation.alphaTarget(0.3).restart()\n    }\n\n    function dragEnded(d) {\n        delete d.fx;\n        delete d.fy;\n        forceSimulation.alphaTarget(0);\n    }\n\n    function ticked() {\n        bubbles\n            .attr(\"cx\", function (d) {\n                return d.x;\n            })\n            .attr(\"cy\", function (d) {\n                return d.y;\n            });\n        text\n            .attr('x', (d) => d.x)\n            .attr('y', (d) => d.y)\n    }\n\n    function charge(d) {\n        return -Math.pow(d.radius, 2) * forceStrength;\n    }\n\n    function ticked() {\n        bubbles\n            .attr(\"cx\", function (d) {\n                return d.x;\n            })\n            .attr(\"cy\", function (d) {\n                return d.y;\n            });\n        text\n            .attr('x', (d) => d.x)\n            .attr('y', (d) => d.y)\n    }\n\n    const init = useCallback(async () => {\n        const loaded = await d3.json(\n            `datasets/overview.json`\n        )\n        setLoading(false)\n        setData(loaded)\n    })\n\n    const draw = useCallback(async () => {\n\n        const svg = d3.select(svgRef.current)\n        let radiusScale;\n        let colorScale;\n        let heightScale;\n\n        const allFrequencies = Object.values(viewData)\n        const minFrequency = Math.min(...allFrequencies)\n        const maxFrequency = Math.max(...allFrequencies)\n\n\n        radiusScale = d3.scaleLinear()\n            .domain([minFrequency, maxFrequency])\n            .range([minBubbleSize, maxBubbleSize]);\n\n        colorScale = d3.scaleSequential()\n            .domain([minFrequency, maxFrequency])\n            .interpolator(d3.interpolateRainbow);\n\n        heightScale = d3.scaleLinear()\n            .domain([minFrequency, maxFrequency])\n            .range([0, height]);\n\n        const nodes = Object.keys(viewData).map(d => {\n\n            return {\n                data: d,\n                freq: viewData[d],\n                radius: radiusScale(viewData[d]),\n                fill: colorScale(viewData[d]),\n                x: Math.random() * width,\n                y: heightScale(viewData[d])/*  Math.random() * height */\n            }\n        })\n\n        // d3.select(\"#chart\").html(\"\")\n        // d3.select('#chart')\n        //     .append('svg')\n        //     .attr('height', height)\n        //     .attr('width', width)\n        svg.html(\"\")\n        bubbles = svg\n            .selectAll('circle')\n            .data(nodes)\n            .enter()\n            .append('circle')\n            .attr('r', d => { return d.radius })\n            .attr('fill', d => nested? 'lightblue' : 'salmon')\n            .attr('stroke', d => nested? d3.rgb('lightblue').darker() : d3.rgb('salmon').darker())\n            .on(\"mouseover\", handleMouseOver)\n            .on(\"mouseout\", handleMouseOut)\n            .on('click', handleMouseClick)\n            .call(d3.drag()\n                .on('start', dragStarted)\n                .on('drag', dragged)\n                .on('end', dragEnded)\n            )\n\n        text = svg\n            .selectAll('text')\n            .data(nodes.filter(node => node.radius > 20))\n            .enter()\n            .append('text')\n            .attr('x', (d) => d.x)\n            .attr('y', (d) => d.y)\n            .attr('font-size', '10px')\n            .attr(\"transform\", d => `translate(-${d.radius / 2}, 0)`)\n            .text((d) => d.data)\n\n\n        forceSimulation = d3.forceSimulation()\n            .nodes(nodes)\n            .velocityDecay(velocityDecay)\n            .on('tick', ticked)\n            .force('x', d3.forceX().strength(forceStrength).x(width / 2))\n            .force('y', d3.forceY().strength(forceStrength).y(height / 2))\n            .force(\"charge\", d3.forceManyBody().strength(charge))\n\n    }, [viewData, nested])\n\n    const prepareInnerData = (result) => {\n        const finalResult = {}\n        const keysSorted = Object.keys(result).sort(function (a, b) { return result[b] - result[a] })\n        keysSorted.splice(0, maxBubbles).forEach(key => {\n            finalResult[key] = result[key]\n        })\n        selectData(finalResult)\n\n    }\n\n\n    const prepareOuterData = (key) => {\n        console.log(data)\n        if (!data) return\n        const result = {}\n        const finalResult = {}\n        // Prepare data for visualization\n        const selectedData = data[key]\n        // console.log(data, key, selectedData)\n\n        switch (key) {\n            case 'entities':\n                selectedData.forEach(entitiesObj => {\n                    const entitiesList = JSON.parse(entitiesObj)\n                    entitiesList.forEach(entity => {\n                        if (result[entity['entity_type']]) {\n                            result[entity['entity_type']] += 1\n                        } else {\n                            result[entity['entity_type']] = 1\n                        }\n                    })\n                })\n                break;\n            case 'targets':\n                selectedData.forEach(targetsObj => {\n                    const targetsList = JSON.parse(targetsObj)\n                    targetsList.forEach(target => {\n                        if (result[target['target']]) {\n                            result[target['target']] += 1\n                        } else {\n                            result[target['target']] = 1\n                        }\n                    })\n                })\n                break;\n            case 'advertiser':\n            case 'paid_for_by':\n                selectedData.forEach(data => {\n                    if (result[data]) {\n                        result[data] += 1\n                    } else {\n                        result[data] = 1\n                    }\n                })\n                break;\n\n\n        }\n\n        const keysSorted = Object.keys(result).sort(function (a, b) { return result[b] - result[a] })\n        keysSorted.splice(0, maxBubbles).forEach(key => {\n            finalResult[key] = result[key]\n        })\n\n        selectData(finalResult)\n    }\n\n    useEffect(() => {\n        draw()\n    }, [viewData])\n\n    useEffect(() => {\n        prepareOuterData(selectedView)\n        toggleNested(false)\n    }, [selectedView])\n\n    useEffect(() => {\n        if (!nested) {\n            prepareOuterData(selectedView)\n        }\n    }, [nested])\n\n    useEffect(() => {\n        init()\n    }, [])\n\n\n\n    return (\n        <div>\n            <Layout.Row>\n                <Layout.Col offset=\"1\" style={{ marginTop: '10px' }}>\n                    <Select onChange={(value) => { selectView(value) }} placeholder=\"Choose one\">\n                        {\n                            Object.values(overviewType).map(key => {\n                                return <Select.Option key={key} label={key} value={key}>\n                                </Select.Option>\n                            })\n                        }\n                    </Select>\n                </Layout.Col>\n\n                <Layout.Col span=\"18\">\n                    {\n                        loading ? <Loading>\n                            \n                        </Loading> : <svg\n                            ref={svgRef}\n                            preserveAspectRatio='xMinYMin meet'\n                            viewBox={`0 0 ${width} ${height}`}\n                        ></svg>\n                    }\n\n                </Layout.Col>\n                <Layout.Col span=\"6\">\n                    <h4>Info Pane</h4>\n                    {sidebarData}\n                    <br></br>\n                    {nested ? <Button style={{ 'marginTop': '10px' }} type=\"primary\" onClick={() => toggleNested(false)}>Back to {selectedView}</Button> : null}\n                </Layout.Col>\n            </Layout.Row>\n\n        </div>\n    )\n\n}","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { Layout, Button, Tag } from 'element-react'\nimport * as d3 from 'd3'\nimport \"d3-selection-multi\";\n\n\nexport const Clustering = () => {\n    const width = 960, height = 500;\n    const svgRef = useRef();\n    const clusters = 8\n    const [data, setData] = useState(null);\n    const [sidebarData, setSidebarData] = useState('Select a node to view');\n    const [cluster, setCluster] = useState({})\n    const [activeClass, setActiveClass] = useState(null)\n    const [activeLabel, setActiveLabel] = useState(null)\n    const [reload, toggleReload] = useState(false)\n    let Colors = {};\n    let points = []\n\n    Colors.names = {\n        aqua: \"#00ffff\",\n        // azure: \"#f0ffff\",\n        beige: \"#f5f5dc\",\n        // black: \"#000000\",\n        blue: \"#0000ff\",\n        brown: \"#a52a2a\",\n        cyan: \"#00ffff\",\n        darkblue: \"#00008b\",\n        darkcyan: \"#008b8b\",\n        darkgrey: \"#a9a9a9\",\n        darkgreen: \"#006400\",\n        darkkhaki: \"#bdb76b\",\n        darkmagenta: \"#8b008b\",\n        darkolivegreen: \"#556b2f\",\n        darkorange: \"#ff8c00\",\n        darkorchid: \"#9932cc\",\n        darkred: \"#8b0000\",\n        darksalmon: \"#e9967a\",\n        darkviolet: \"#9400d3\",\n        fuchsia: \"#ff00ff\",\n        gold: \"#ffd700\",\n        green: \"#008000\",\n        indigo: \"#4b0082\",\n        khaki: \"#f0e68c\",\n        lightblue: \"#add8e6\",\n        lightcyan: \"#e0ffff\",\n        lightgreen: \"#90ee90\",\n        lightgrey: \"#d3d3d3\",\n        lightpink: \"#ffb6c1\",\n        lightyellow: \"#ffffe0\",\n        lime: \"#00ff00\",\n        magenta: \"#ff00ff\",\n        maroon: \"#800000\",\n        navy: \"#000080\",\n        olive: \"#808000\",\n        orange: \"#ffa500\",\n        pink: \"#ffc0cb\",\n        purple: \"#800080\",\n        violet: \"#800080\",\n        red: \"#ff0000\",\n        silver: \"#c0c0c0\",\n        // white: \"#ffffff\",\n        yellow: \"#ffff00\"\n    };\n    Colors.random = function () {\n        var result;\n        var count = 0;\n        for (var prop in this.names)\n            if (Math.random() < 1 / ++count)\n                result = prop;\n        return result;\n    };\n\n\n    function handleMouseOut(d, i) {\n        const svg = d3.select(svgRef.current)\n\n        // Use D3 to select element, change color back to normal\n        svg.selectAll(\"circle\").style('opacity', 1)\n\n        d3.select(this).attrs({\n            r: 2\n        });\n        setActiveClass(null)\n        setSidebarData('')\n        setActiveLabel(null)\n\n        // Select text by id and then remove\n        // d3.select(\"#t\" + d.x + \"-\" + d.y + \"-\" + i).remove();  // Remove text location\n    }\n\n    function handleMouseOver(d, i) {\n        const svg = d3.select(svgRef.current)\n\n        svg.selectAll(\"circle\").style('opacity', 0.2)\n        d3.select(this).attrs({\n            r: 10\n        }).styles({ 'opacity': 1 })\n        setSidebarData(`Title: ${points[i].title}, Cluster ${parseInt(points[i].label) + 1}`)\n        setActiveClass(points[i].color)\n        setActiveLabel(points[i].label)\n        // setInfo(points[i] && `${points[i].title} ${points[i].color}`, points[i] && points[i].message)\n\n    }\n\n    function generatePolygonPoints(numPoints) {\n        const centerX = width / 2;\n        const centerY = height / 2;\n        const radius = height / 3;\n\n        const points = d3.range(numPoints)\n            .map(i => {\n                const angle = i / numPoints * Math.PI * 2 + Math.PI;\n                return {\n                    x: Math.sin(angle) * radius + centerX,\n                    y: Math.cos(angle) * radius + centerY\n                };\n            });\n        return points\n    }\n\n    function animate(circle, data) {\n        // console.log(data)\n        return new Promise((resolve, reject) => {\n            circle.transition()\n                .duration(2000)\n                .attr(\"cx\", function (d, i) {\n                    // console.log(i)\n                    return (data[i] && data[i].x) || 0;\n                })\n                .attr(\"cy\", function (d, i) {\n                    return (data[i] && data[i].y) || 0;\n                })\n                .attr('entities', function (d, i) { return data[i] && data[i].entity || [] })\n                .style('fill', function (d, i) {\n                    return data[i] && data[i].color || 'transparent'\n                })\n                // .attr('color', function (d, i) { return data[i].color || 'black' })\n                .on('end', () => {\n                    resolve()\n                })\n        })\n\n    }\n\n    const draw = useCallback(async () => {\n        \n        if (!data) return\n        const svg = d3.select(svgRef.current)\n        svg.html('')\n\n        const frames = []\n        const length = data.labels.length\n\n        // Firstly, init x points at center\n        for (let i = 0; i < length; i++) {\n            points.push({\n                id: i,\n                x: width / 2,\n                y: height / 2,\n            })\n        }\n\n        frames.push(points)\n        const circle = svg.selectAll(\"circle\")\n            .data(frames[0])\n            .enter()\n            .append(\"circle\")\n            .attr(\"cx\", function (d) {\n                return d.x; // new data field\n            })\n            .attr(\"cy\", function (d) {\n                return d.y; // new data field\n            })\n            .attr(\"r\", 2)\n            .on(\"mouseover\", handleMouseOver)\n            .on(\"mouseout\", handleMouseOut);\n        points = []\n        // Then, space them out accordingly. \n        for (let i = 0; i < length; i++) {\n            points.push({\n                id: i,\n                x: Math.random() * width,\n                y: Math.random() * height,\n            })\n        }\n        frames.push(points)\n        await animate(circle, frames[1])\n\n        // const clusters = 5\n        // const iteration = 2\n        const polyPoints = generatePolygonPoints(clusters)\n        const colorList = {}\n\n        // for (let i = 1; i <= iteration; i++) {\n        points = []\n        let labelling = {}\n        const rSize = {}\n        const { labels, entities, distances, titles, messages } = data\n        // Segregate current clusters into labels\n        for (let k = 0; k < labels.length; k++) {\n            const curLabel = labels[k]\n            if (labelling[curLabel]) {\n                labelling[curLabel].push(k)\n            } else {\n                labelling[curLabel] = [k]\n            }\n        }\n\n        for (let k = 0; k < clusters; k++) {\n            rSize[k] = Math.floor(Math.sqrt(2 * 2 * labelling[k].length / Math.PI))\n        }\n\n        // (Pi R2 / 2 * no of dots) = 2*2*no / pi\n        let maxEntityList = {}\n        for (let k = 0; k < clusters; k++) {\n            maxEntityList[k] = {}\n        }\n\n        entities.map((entityList, index) => {\n            const label = labels[index]\n            const thisEntities = JSON.parse(entityList).map(entity => {\n                return entity['entity']\n            })\n            for (const entity of thisEntities) {\n                if (maxEntityList[label][entity]) {\n                    maxEntityList[label][entity] += 1\n                } else {\n                    maxEntityList[label][entity] = 1\n                }\n            }\n        })\n\n        for (let k = 0; k < clusters; k++) {\n            var sortable = [];\n            for (const entity in maxEntityList[k]) {\n                sortable.push([entity, maxEntityList[k][entity]])\n            }\n            sortable.sort(function (a, b) {\n                return b[1] - a[1];\n            });\n            maxEntityList[k] = [...sortable]\n        }\n\n        const maxEntitiesMentioned = {}\n        const maxEntityInfo = {}\n        for (let k = 0; k < clusters; k++) {\n            maxEntitiesMentioned[k] = maxEntityList[k].splice(0, 3)\n            maxEntityInfo[k] = {}\n            const entities = maxEntitiesMentioned[k].map(entity => entity[0])\n            const entitiesFreq = maxEntitiesMentioned[k].map(entity => entity[1])\n            entities.forEach((entity, i) => {\n                if (!colorList[entity]) {\n                    let color = Colors.random()\n                    while (Object.values(colorList).includes(color)) {\n                        color = Colors.random()\n                    }\n                    colorList[entity] = color\n                    // generateNewRowForInfo(`${entity} - ${colorList[entity]}`, colorList[entity])\n                }\n                maxEntityInfo[k][entity] = {\n                    color: colorList[entity],\n                    freq: entitiesFreq[i]\n                }\n            })\n            // maxEntitiesMentioned.push(...maxEntityList[k].splice(0, 1))\n        }\n        setCluster(maxEntityInfo)\n\n        const minDist = Math.min(...distances.flat(Infinity))\n        const maxDist = Math.max(...distances.flat(Infinity))\n        let j = 0;\n        // R -= intervalMinusR\n        for (const label of labels) {\n            const entityList = entities[j]\n            const thisEntities = JSON.parse(entityList).map(entity => {\n                return entity['entity']\n            })\n            const titleList = maxEntitiesMentioned[label].map(entity => entity[0])\n            const intersection = titleList.filter(value => -1 !== thisEntities.indexOf(value))\n            // console.log(label, intersection)\n            let color = 'black'\n            if (intersection.length > 0) {\n                color = colorList[intersection[0]] // Only take the max\n            }\n            const R = rSize[label]\n            const centroid = polyPoints[label]\n            let a = Math.random() * 2 * Math.PI;// angle\n            let r = Math.sqrt(~~(Math.random() * R * R));// distance fron the center of the main circle\n            // x and y coordinates of the particle\n            let x = centroid.x + r * Math.cos(a);\n            let y = centroid.y + r * Math.sin(a);\n            points.push({\n                id: j,\n                x,\n                y,\n                label,\n                color,\n                centroid,\n                entity: entities[j],\n                title: titles[j],\n                message: messages[j],\n            })\n            j++\n        }\n        // console.log(points)\n        frames.push(points)\n        await animate(circle, frames[frames.length - 1])\n    }, [data])\n    // }\n\n\n\n    const init = useCallback(async () => {\n        const loaded = await d3.json(\n            `datasets/clustering.json`\n        )\n        console.log(loaded)\n        setData(loaded)\n    })\n\n    useEffect(() => {\n        init()\n    }, [])\n\n    useEffect(() => {\n        draw()\n\n    }, [data])\n\n    useEffect(() => {\n        if (reload) {\n            draw()\n            toggleReload(false)\n        }\n    }, [reload])\n\n\n\n\n    return (\n        <div>\n            <Layout.Row>\n\n                <Layout.Col span=\"18\">\n                    <Button onClick={() => toggleReload(true)} style={{ 'margin': '10px 20px' }}>Restart Cool Animation</Button>\n                    <svg\n                        ref={svgRef}\n                        preserveAspectRatio='xMinYMin meet'\n                        viewBox={`0 0 ${width} ${height}`}\n                    ></svg>\n\n                </Layout.Col>\n                <Layout.Col span=\"6\" style={{ 'overflow': 'scroll', 'maxHeight': height+'px' }}>\n                    <h4>Info Pane</h4>\n                    {sidebarData}\n                    {Object.entries(cluster).map(([key, info]) => {\n                        return (\n                            <div key={key}>\n                                <h5 style={{\n                                    'textDecoration':\n                                        (!activeLabel ? 'none' : activeLabel == key ? 'underline' : 'none')\n                                }}>Cluster {parseInt(key) + 1}</h5>\n                                {\n                                    Object.entries(info).map(([entity, obj]) => {\n                                        return <Tag style={{\n                                            opacity:\n                                                (!activeClass || activeClass === obj.color ? 1 : 0.2)\n                                        }} key={entity} color={obj.color}>\n                                            {entity} - {obj.freq}\n                                        </Tag>\n                                    })\n                                }\n                            </div>\n                        )\n                    })}\n                </Layout.Col>\n            </Layout.Row>\n\n        </div>\n    )\n\n}\n","import React from 'react'\nimport './App.css'\nimport { Container } from './components/Container'\nimport { Graph } from './components/Graph'\nimport { HottestTopics } from './visualisations/hottest-topics'\nimport { Sentiment } from './visualisations/sentiment'\nimport { Bubbles} from './visualisations/bubbles'\nimport { Clustering } from './visualisations/clustering'\n\nfunction App () {\n  return (\n    <div className='App'>\n      <Container\n        preface='An analysis of'\n        title='Facebook Political Advertisements'\n        subtitle='by Prev Wong &amp; Danny Tey'\n      >\n        <p className='paragraph'>\n          Advertisement is an extremely powerful and therefore, potentially\n          dangerous tool to spread words on any issues, and being the world's\n          largest social media platform in the world, Facebook undeniably has\n          become a platform to disseminate information through targeted ads.\n          While it all seems fine -- we get to access social media for free, in\n          exchange for advertisements, it's actually much more than that. \"If\n          you are not paying, then you are the product\", this saying has been\n          circulating over the past few years and to an extent, it is true.\n          Realize it or not, we are always subconsciously affected by the\n          advertisement shown to us.{' '}\n        </p>\n      </Container>\n      <Container\n        preface=\"What is the\"\n        title=\"Big picture of Facebook political ads?\"\n      >\n        <p className='paragraph'>\n          Let's have a high level overview of the ads. Who are the most frequently mentioned entities, targets, and advertisers?\n        </p>\n      </Container>\n      <Graph visualisation={Bubbles}></Graph>\n      <Container\n        preface='How are the top'\n        title='Political entities represented by advertisers?'\n      >\n        <p className='paragraph'>\n          Let's take a look how the top 10 most mentioned entities are potrayed across the top 100 most impressionable ads.\n        </p>\n      </Container>\n      <Graph visualisation={Sentiment} />\n\n      <Container\n        preface='What are the'\n        title='Hottest topics in each U.S state?'\n      >\n        <p className='paragraph'>\n          We gathered and categorised each entities associated with a state,\n          using NLP. Each state is then represented by the category that has the\n          most impressions.\n        </p>\n      </Container>\n      <Graph visualisation={HottestTopics} />\n\n      <Container\n        preface=\"What are the\"\n        title=\"Entities that occur together with each other?\"\n      >\n        <p className='paragraph'>\n          To better understand what kind of advertisements are displayed, we used K-means clustering algorithm to \n          cluster the ad entities, and therefore, those in the same cluster suggests that they occur frequently\n          in an ad. By doing so, we can see how advertisers tend to associate an entity with each other, eg. \n          Trump with white house. (However, due to limitations of d3, we are only able to select a very small\n          portion of the data as proof-of-concept.)\n        </p>\n      </Container>\n      <Graph visualisation={Clustering} />\n\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'element-theme-default';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}